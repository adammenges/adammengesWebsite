{"version":3,"sources":["utils.js","Header.js","Header-White.js","App.js","serviceWorker.js","index.js"],"names":["sendEmail","window","location","url","useWindowSize","_useState","useState","width","document","documentElement","clientWidth","height","clientHeight","_useState2","Object","slicedToArray","windowSize","setWindowSize","useEffect","onResize","e","addEventListener","removeEventListener","Header","size","h","w","small","desktop","react_default","a","createElement","style","backgroundColor","position","overflow","className","left","top","fontSize","marginTop","class","onClick","mobile","WhiteHeader","color","App","matchMedia","matches","prefersDark","setPrefersDark","_useState3","_useState4","autoSwitch","setAutoSwitch","message","querySelectorAll","setInterval","currentlyDark","TheHeader","Header_Header","Header_White_WhiteHeader","onDoubleClick","handleDoubleClick","data-tip","src","index_es","place","overridePosition","currentEvent","currentTarget","node","desiredPlace","effect","offset","Boolean","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fc06d2b0.chunk.js","sourcesContent":["import { useState, useEffect } from 'react'\n\nconst sendEmail = () => {\n  var url;\n  url = 'mailto:' + \"adam@adammenges.com\"\n  url += '?subject=' + \"ðŸ‘‹\"\n  url += '&body=' + ''\n  // window.open(url);\n  window.location = url;\n}\n\nconst useWindowSize = () => {\n  const [windowSize, setWindowSize] = useState(() => ({\n    width: document.documentElement.clientWidth,\n    height: document.documentElement.clientHeight,\n  }))\n\n  useEffect(() => {\n    const onResize = e => {\n      setWindowSize({\n        width: document.documentElement.clientWidth,\n        height: document.documentElement.clientHeight,\n      })\n    }\n    window.addEventListener('resize', onResize)\n    window.addEventListener('orientationchange', onResize)\n    return () => {\n      window.removeEventListener('resize', onResize)\n      window.removeEventListener('orientationchange', onResize)\n    }\n  })\n\n  return windowSize\n}\n\nexport { useWindowSize, sendEmail }\n","import React from 'react'\nimport ReactTooltip from 'react-tooltip'\nimport { useWindowSize, sendEmail } from './utils.js'\n\nexport const Header = () => {\n  const size = useWindowSize()\n  const h = size.height\n  const w = size.width\n  const small = w <= 640\n\n  const desktop = (\n    <div\n      style={{\n        backgroundColor: '#020100',\n        height: h,\n        width: w,\n        position: 'relative',\n        overflow: 'hidden',\n      }}\n    >\n      <div\n        className=\"me-blend\"\n        style={{\n          position: 'absolute',\n          left: w / 2 - 540,\n          top: h / 2 - 320,\n        }}\n      />\n      <div\n        style={{\n          position: 'absolute',\n          left: w / 2 + 70,\n          top: h / 2 - 50, // size of div\n        }}\n      >\n        <div\n          style={{\n            fontSize: 37,\n          }}\n        >\n          Adam Menges\n        </div>\n        <div\n          style={{\n            fontSize: 17,\n            marginTop: -2,\n          }}\n        >\n          <div class=\"a-black\" onClick={sendEmail}>adam@adammenges.com</div>\n        </div>\n      </div>\n    </div>\n  )\n  const mobile = (\n    <div\n      style={{\n        backgroundColor: '#020100',\n        height: h,\n        width: w,\n        position: 'relative',\n        overflow: 'hidden',\n      }}\n    >\n      <div\n        className=\"me-blend-small\"\n        style={{\n          position: 'absolute',\n          left: w / 2 - 225,\n          top: h / 2 - 225 - 50,\n        }}\n      />\n      <div\n        style={{\n          position: 'absolute',\n          left: w / 2 - 110,\n          top: h / 2 + 125,\n        }}\n      >\n        <div\n          style={{\n            fontSize: 37,\n          }}\n        >\n          Adam Menges\n        </div>\n        <div\n          style={{\n            fontSize: 17,\n            marginTop: -2,\n          }}\n        >\n          <div class=\"a-black\" onClick={sendEmail}>adam@adammenges.com</div>\n        </div>\n      </div>\n\n    </div>\n  )\n  return (\n    <div style={{ position: 'relative' }}>\n      {small ? mobile : desktop}\n    </div>\n    );\n  // return <div style={{ position: 'relative' }}>{small ? mobile : desktop}</div>\n}\n","import React from 'react'\nimport ReactTooltip from 'react-tooltip'\nimport { useWindowSize, sendEmail } from './utils.js'\n\nexport const WhiteHeader = () => {\n  const size = useWindowSize()\n  const h = size.height\n  const w = size.width\n  const small = w <= 640\n\n  const desktop = (\n    <div\n      style={{\n        backgroundColor: '#ededed',\n        height: h,\n        width: w,\n        position: 'relative',\n        overflow: 'hidden',\n      }}\n    >\n      <div\n        className=\"me-blend-white\"\n        style={{\n          position: 'absolute',\n          left: w / 2 - 300,\n          top: h / 2 - 170,\n        }}\n      />\n      <div\n        style={{\n          position: 'absolute',\n          left: w / 2 + 40,\n          top: h / 2 - 50, // size of div\n        }}\n      >\n        <div\n          style={{\n            fontSize: 37,\n            color: '#2d2d2d',\n          }}\n        >\n          Adam Menges\n        </div>\n        <div\n          style={{\n            fontSize: 17,\n            marginTop: -2,\n            color: '#2d2d2d',\n          }}\n        >\n          <div class=\"a-white\" onClick={sendEmail}>adam@adammenges.com</div>\n        </div>\n      </div>\n    </div>\n  )\n  const mobile = (\n    <div\n      style={{\n        backgroundColor: '#ededed',\n        height: h,\n        width: w,\n        position: 'relative',\n        overflow: 'hidden',\n      }}\n    >\n      <div\n        className=\"me-blend-small-white\"\n        style={{\n          position: 'absolute',\n          left: w / 2 - 125,\n          top: h / 2 - 225,\n        }}\n      />\n      <div\n        style={{\n          position: 'absolute',\n          left: w / 2 - 110,\n          top: h / 2 + 45,\n        }}\n      >\n        <div\n          style={{\n            fontSize: 37,\n            color: '#2d2d2d',\n          }}\n        >\n          Adam Menges\n        </div>\n        <div\n          style={{\n            fontSize: 17,\n            marginTop: -2,\n          }}\n        >\n          <div class=\"a-white\" onClick={sendEmail}>adam@adammenges.com</div>\n        </div>\n      </div>\n    </div>\n  )\n  return (\n  <div style={{ position: 'relative' }}>\n    {small ? mobile : desktop}\n  </div>\n  );\n}\n","import React from 'react'\nimport './app.css'\nimport { Header } from './Header.js'\nimport { WhiteHeader } from './Header-White.js'\nimport { Project } from './Project'\nimport { useState, useEffect } from 'react'\nimport { useWindowSize, sendEmail } from './utils.js'\nimport ReactTooltip from 'react-tooltip'\n// import { CenterProjects } from './Center'\n\n// I should do this the right way later haha\nconst OldSchoolSpaces = ({ number }) => {\n  const spaces = [...Array(number).keys()]\n  return spaces.map(() => {\n    return (\n      <>\n        <br />\n        &nbsp;\n        <br />\n      </>\n    )\n  })\n}\n\nfunction handleDoubleClick(e, prefersDark, setPrefersDark, setAutoSwitch) {\n  // setPrefersDark(!prefersDark)\n  setAutoSwitch(true)\n}\n\nfunction App() {\n  let [prefersDark, setPrefersDark] = useState(\n    () =>\n      window.matchMedia &&\n      window.matchMedia('(prefers-color-scheme: dark)').matches\n  )\n\n  let [autoSwitch, setAutoSwitch] = useState(() => {\n    return true\n  })\n\n  const size = useWindowSize()\n  const h = size.height\n  const w = size.width\n  const small = w <= 640\n\n  const message = prefersDark ? 'Try turning on light mode' : 'Try turning on dark mode'\n\n  // force default dark mode for now until I finish designing the light mode UI\n  // const [prefersDark, setPrefersDark] = useState(() => {\n  //   return true\n  // })\n\n  // hack in using the right background color so the\n  // scroll rubber banding works how I designed\n  const baseHTML = document.querySelectorAll('html')\n  baseHTML[0].style.backgroundColor = prefersDark ? '#00080e' : '#ededed'\n\n  // this is insane, but apparently there's no event to listen for so here we are\n  setInterval(() => {\n    const currentlyDark =\n      window.matchMedia &&\n      window.matchMedia('(prefers-color-scheme: dark)').matches\n    if (currentlyDark !== prefersDark && autoSwitch) {\n      setPrefersDark(currentlyDark)\n    }\n  }, 200)\n\n  const TheHeader = prefersDark ? <Header /> : <WhiteHeader />\n  return (\n    <div\n      className=\"App noWebShit\"\n      onDoubleClick={e => {\n        handleDoubleClick(e, prefersDark, setPrefersDark, setAutoSwitch)\n      }}\n    >\n      {/* <Header /> */}\n      {TheHeader}\n      <div\n        style={{\n          position: 'absolute',\n          left: w - 30,\n          top: h - 50,\n        }}\n      >\n        <p data-tip={message}>\n          <img width=\"30px\" height=\"30px\" src=\"darkmode.png\" />\n        </p>\n        <ReactTooltip place={'left'} overridePosition={(location, currentEvent, currentTarget, node, place, desiredPlace, effect, offset) => {\n          // currentTarget.location.top\n          // return {left: currentTarget.location.left, top: currentTarget.location.top}\n          // console.log(location, currentEvent, currentTarget, node, place, desiredPlace, effect, offset)\n          // return {left: place.location.left, top: place.location.top}\n          return {left: w-200, top: h-35}\n        }} />\n      </div>\n      {/* ({left:number, top: number}, currentEvent, currentTarget, node, place, desiredPlace, effect, offset) => ({left: number, top: number}) */}\n      {/* <OldSchoolSpaces number={3} />\n      <Project>\n        <div>stuff1</div>\n        <div>stuff2</div>\n        <div>stuff3</div>\n        <div>stuff4</div>\n        <div>stuff5</div>\n        <div>stuff6</div>\n        <div>stuff7</div>\n      </Project>\n      <OldSchoolSpaces number={7} /> */}\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}