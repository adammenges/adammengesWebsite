{"version":3,"sources":["utils.js","images/me.jpg","Header.js","App.js","serviceWorker.js","index.js"],"names":["sendEmail","window","location","url","useWindowSize","useState","width","document","documentElement","clientWidth","height","clientHeight","windowSize","setWindowSize","useEffect","onResize","e","setInterval","addEventListener","removeEventListener","Header","size","matchMedia","matches","prefersDark","message","icon","h","w","small","desktop","style","backgroundColor","position","overflow","className","left","top","backgroundImage","fontSize","marginTop","class","onClick","opacity","data-tip","src","place","overridePosition","currentEvent","currentTarget","node","desiredPlace","effect","offset","mobile","Portfolio","App","setAutoSwitch","querySelectorAll","homePage","onDoubleClick","setPrefersDark","handleDoubleClick","exact","path","Boolean","hostname","match","event","scale","preventDefault","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.92c195be.chunk.js","sourcesContent":["import { useState, useEffect } from 'react'\n\nconst sendEmail = () => {\n  var url;\n  url = 'mailto:' + \"hello@adammenges.com\"\n  url += '?subject=' + \"ðŸ‘‹\"\n  url += '&body=' + ''\n  // window.open(url);\n  window.location = url;\n}\n\nconst useWindowSize = () => {\n  const [windowSize, setWindowSize] = useState(() => ({\n    width: document.documentElement.clientWidth,\n    height: document.documentElement.clientHeight,\n  }))\n\n  useEffect(() => {\n    const onResize = e => {\n      setWindowSize({\n        width: document.documentElement.clientWidth,\n        height: document.documentElement.clientHeight,\n      })\n      // work around iPad bug on orientationchange\n      setInterval(() => {\n        setWindowSize({\n          width: document.documentElement.clientWidth,\n          height: document.documentElement.clientHeight,\n        })\n      }, 100)\n    }\n    window.addEventListener('resize', onResize)\n    window.addEventListener('orientationchange', onResize)\n    return () => {\n      window.removeEventListener('resize', onResize)\n      window.removeEventListener('orientationchange', onResize)\n    }\n  })\n\n  return windowSize\n}\n\nexport { useWindowSize, sendEmail }\n","export default __webpack_public_path__ + \"static/media/me.ddc477fc.jpg\";","import React from 'react'\nimport ReactTooltip from 'react-tooltip'\nimport { useWindowSize, sendEmail } from './utils.js'\nimport { useState, useEffect } from 'react'\nimport me from './images/me.jpg'\n\nexport const Header = () => {\n  const size = useWindowSize()\n  let [prefersDark, setPrefersDark] = useState(\n    () =>\n      window.matchMedia &&\n      window.matchMedia('(prefers-color-scheme: dark)').matches\n  )\n\n  const message = prefersDark\n    ? 'Try turning on light mode'\n    : 'Try turning on dark mode'\n  const icon = prefersDark ? 'lightmode.png' : 'darkmode.png'\n  const showIcon = false\n\n  const h = size.height\n  const w = size.width\n  const small = w <= 640\n\n  const desktop = (\n    <div\n      style={{\n        backgroundColor: '#020100',\n        height: h,\n        width: w,\n        position: 'relative',\n        overflow: 'hidden',\n      }}\n    >\n      <div\n        className=\"me-blend\"\n        style={{\n          position: 'absolute',\n          left: w / 2 - 540,\n          top: h / 2 - 320,\n          backgroundImage: `url(\"https://adammenges.com/me.jpg\")`,\n        }}\n      />\n      <div\n        style={{\n          position: 'absolute',\n          left: w / 2 + 70,\n          top: h / 2 - 50, // size of div\n        }}\n      >\n        <div\n          style={{\n            fontSize: 37,\n          }}\n        >\n          Adam Menges\n        </div>\n        <div\n          style={{\n            fontSize: 17,\n            marginTop: -2,\n          }}\n        >\n          <div\n            class=\"a-black\"\n            style={{\n              marginTop: '-7px',\n            }}\n            onClick={sendEmail}\n          >\n            hello@adammenges.com\n          </div>\n        </div>\n      </div>\n      <div\n        style={{\n          position: 'absolute',\n          left: w - 35,\n          top: h - 55,\n          opacity: showIcon ? 1 : 0,\n        }}\n      >\n        <p data-tip={message}>\n          <img width=\"30px\" height=\"30px\" src={icon} />\n        </p>\n        <ReactTooltip\n          place={'left'}\n          overridePosition={(\n            location,\n            currentEvent,\n            currentTarget,\n            node,\n            place,\n            desiredPlace,\n            effect,\n            offset\n          ) => {\n            // currentTarget.location.top\n            // return {left: currentTarget.location.left, top: currentTarget.location.top}\n            // console.log(location, currentEvent, currentTarget, node, place, desiredPlace, effect, offset)\n            // return {left: place.location.left, top: place.location.top}\n            // return location\n            return { left: w - 205, top: h - 40 }\n          }}\n        />\n      </div>\n    </div>\n  )\n  const mobile = (\n    <div\n      style={{\n        backgroundColor: '#020100',\n        height: h,\n        width: w,\n        position: 'relative',\n        overflow: 'hidden',\n      }}\n    >\n      <div\n        className=\"me-blend-small\"\n        style={{\n          position: 'absolute',\n          left: w / 2 - 225,\n          top: h / 2 - 225 - 50,\n          backgroundImage: `url(\"https://adammenges.com/me.jpg\")`,\n        }}\n      />\n      <div\n        style={{\n          position: 'absolute',\n          left: w / 2 - 110,\n          top: h / 2 + 125,\n        }}\n      >\n        <div\n          style={{\n            fontSize: 37,\n          }}\n        >\n          Adam Menges\n        </div>\n        <div\n          style={{\n            fontSize: 17,\n            marginTop: -2,\n          }}\n        >\n          <div\n            class=\"a-black\"\n            style={{\n              marginTop: '-7px',\n            }}\n            onClick={sendEmail}\n          >\n            hello@adammenges.com\n          </div>\n        </div>\n      </div>\n      <div\n        style={{\n          position: 'absolute',\n          left: w - 35,\n          top: h - 55,\n          opacity: showIcon ? 1 : 0,\n        }}\n      >\n        <p data-tip={message}>\n          <img width=\"30px\" height=\"30px\" src={icon} />\n        </p>\n        <ReactTooltip\n          place={'left'}\n          overridePosition={(\n            location,\n            currentEvent,\n            currentTarget,\n            node,\n            place,\n            desiredPlace,\n            effect,\n            offset\n          ) => {\n            // currentTarget.location.top\n            // return {left: currentTarget.location.left, top: currentTarget.location.top}\n            // console.log(location, currentEvent, currentTarget, node, place, desiredPlace, effect, offset)\n            // return {left: place.location.left, top: place.location.top}\n            // return location\n            return { left: w - 205, top: h - 40 }\n          }}\n        />\n      </div>\n    </div>\n  )\n  return <div style={{ position: 'relative' }}>{small ? mobile : desktop}</div>\n  // return <div style={{ position: 'relative' }}>{small ? mobile : desktop}</div>\n}\n\nexport const Portfolio = () => {\n  return <div style={{ position: 'relative' }}>{'T'}</div>\n}\n","import React from 'react'\nimport './app.css'\nimport { Header, Portfolio } from './Header.js'\n// import { Portfolio } from './Portfolio.js'\nimport { WhiteHeader } from './Header-White.js'\nimport { Project } from './Project'\n\nimport { useState, useEffect } from 'react'\nimport { useWindowSize, sendEmail } from './utils.js'\nimport ReactTooltip from 'react-tooltip'\nimport { Route, Switch, Link } from 'react-router-dom'\n// import { CenterProjects } from './Center'\n\n// I should do this the right way later haha\nconst OldSchoolSpaces = ({ number }) => {\n  const spaces = [...Array(number).keys()]\n  return spaces.map(() => {\n    return (\n      <>\n        <br />\n        &nbsp;\n        <br />\n      </>\n    )\n  })\n}\n\nfunction handleDoubleClick(e, prefersDark, setPrefersDark, setAutoSwitch) {\n  // setPrefersDark(!prefersDark)\n  setAutoSwitch(false)\n}\n\nfunction App() {\n  // let [prefersDark, setPrefersDark] = useState(\n  //   () =>\n  //     window.matchMedia &&\n  //     window.matchMedia('(prefers-color-scheme: dark)').matches\n  // )\n\n  // force default dark mode for now until I finish designing the light mode UI\n  const [prefersDark, setPrefersDark] = useState(() => {\n    return true\n  })\n\n  let [autoSwitch, setAutoSwitch] = useState(() => {\n    return true\n  })\n\n  const size = useWindowSize()\n  const h = size.height\n  const w = size.width\n  const small = w <= 640\n\n  const message = prefersDark\n    ? 'Try turning on light mode'\n    : 'Try turning on dark mode'\n\n  // hack in using the right background color so the\n  // scroll rubber banding works how I designed\n  const baseHTML = document.querySelectorAll('html')\n  baseHTML[0].style.backgroundColor = prefersDark ? '#00080e' : '#ededed'\n\n  // this is insane, but apparently there's no event to listen for so here we are\n  // setInterval(() => {\n  //   const currentlyDark =\n  //     window.matchMedia &&\n  //     window.matchMedia('(prefers-color-scheme: dark)').matches\n  //   if (currentlyDark !== prefersDark && autoSwitch) {\n  //     setPrefersDark(currentlyDark)\n  //   }\n  // }, 200)\n\n  const TheHeader = prefersDark ? <Header /> : <WhiteHeader />\n\n  // const homePage = false ? TheHeader : <Portfolio />\n  // const homePage = <Portfolio />\n  const homePage = <Header />\n  return (\n    <div\n      className=\"App noWebShit\"\n      onDoubleClick={(e) => {\n        handleDoubleClick(e, prefersDark, setPrefersDark, setAutoSwitch)\n      }}\n    >\n      <Switch>\n        <Route exact path=\"/\">\n          {homePage}\n        </Route>\n        // https://adammenges.com/portfolio\n        <Route path=\"/portfolio\">\n          <Portfolio />\n        </Route>\n        <Route path=\"/about\">\n          <Portfolio />\n        </Route>\n        <Route path=\"/design\">\n          <Portfolio />\n        </Route>\n      </Switch>\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport { BrowserRouter, HashRouter } from 'react-router-dom'\n\ndocument.addEventListener(\n  'touchmove',\n  function (event) {\n    if (event.scale !== 1) {\n      event.preventDefault()\n    }\n  },\n  false\n)\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <HashRouter>\n//       <App />\n//     </HashRouter>\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// )\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// if (module.hot) {\n//   module.hot.accept('./App', () => {\n//     const NextApp = require('./App').default\n//     ReactDOM.render(<NextApp />, document.getElementById('root'))\n//   })\n// }\n\n// ReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}